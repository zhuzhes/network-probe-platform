# Multi-stage build for agent
FROM python:3.11-alpine AS builder

# Install build dependencies
RUN apk add --no-cache \
    gcc \
    musl-dev \
    libffi-dev \
    openssl-dev \
    cargo \
    rust

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --user -r requirements.txt

# Final runtime stage
FROM python:3.11-alpine

# Install runtime dependencies and tools needed for network probing
RUN apk add --no-cache \
    libffi \
    openssl \
    iputils \
    bind-tools \
    curl \
    && addgroup -g 1001 -S agentgroup \
    && adduser -u 1001 -S agentuser -G agentgroup

# Copy Python packages from builder
COPY --from=builder /root/.local /home/agentuser/.local

# Set working directory
WORKDIR /app

# Copy application code
COPY agent/ ./agent/
COPY shared/ ./shared/

# Create necessary directories
RUN mkdir -p /app/logs /app/data \
    && chown -R agentuser:agentgroup /app

# Switch to non-root user
USER agentuser

# Set environment variables
ENV PATH="/home/agentuser/.local/bin:$PATH"
ENV PYTHONPATH="/app"
ENV PYTHONUNBUFFERED=1

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import psutil; exit(0 if psutil.cpu_percent() >= 0 else 1)" || exit 1

# Default command
CMD ["python", "-m", "agent"]